
SET 1:

QUESTION 1

SELECT  F.TITLE AS FILM_TITLE, C.NAME AS CATEGORY_NAME, R.RENTAL_COUNTS
FROM CATEGORY C
JOIN FILM_CATEGORY FC
ON C.CATEGORY_ID=FC.CATEGORY_ID
JOIN FILM F
ON FC.FILM_ID=F.FILM_ID
JOIN
(
SELECT I.FILM_ID AS F_ID , COUNT(I.FILM_ID) AS RENTAL_COUNTS
FROM INVENTORY I
JOIN RENTAL R ON I.INVENTORY_ID = R.INVENTORY_ID
GROUP BY I.FILM_ID
) R
ON F.FILM_ID = R.F_ID
WHERE C.NAME IN('Animation', 'Children', 'Classics', 'Comedy', 'Family','Music')
ORDER BY 2, 1
__________________________________________________________________________________

QUESTION 2

SELECT F.TITLE AS FILM_TITLE, C.NAME AS CATEGORY_NAME, F.RENTAL_DURATION AS RENTAL_DURATION
, NTILE (4) OVER ( ORDER BY RENTAL_DURATION) AS STANDARD_QUARTILE
FROM CATEGORY C
JOIN FILM_CATEGORY FC
ON C.CATEGORY_ID=FC.CATEGORY_ID
JOIN FILM F
ON FC.FILM_ID=F.FILM_ID
WHERE C.NAME IN('Animation', 'Children', 'Classics', 'Comedy', 'Family','Music')
GROUP BY 1,2,3

____________________________________________________________________________________

QUESTION 3

SELECT CATEGORY_NAME, STANDARD_QUARTILE, COUNT (FILM_NAME)
FROM (
SELECT F.TITLE AS FILM_NAME, C.NAME AS CATEGORY_NAME, NTILE (4) OVER (ORDER BY F.RENTAL_DURATION) AS STANDARD_QUARTILE
FROM CATEGORY C
JOIN FILM_CATEGORY FC
ON C.CATEGORY_ID=FC.CATEGORY_ID
JOIN FILM F
ON FC.FILM_ID=F.FILM_ID
WHERE C.NAME IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family','Music')
  )AS FILM_
GROUP BY 1, 2
ORDER BY 1,2

______________________________________________________________________________________

SET 2:

QUESTION 1

SELECT DATE_PART('YEAR',RENTAL_DATE) AS RENTAL_YEAR,
DATE_PART('MONTH',RENTAL_DATE) AS RENTAL_MONTH, S.STORE_ID, COUNT(RENTAL_ID)AS RENTAL_COUNTS
FROM STORE S
JOIN STAFF ST
ON S.STORE_ID=ST.STORE_ID
JOIN RENTAL R
ON ST.STAFF_ID=R.STAFF_ID 
GROUP BY 1,2,3                       
ORDER BY 2,1,4 DESC
_______________________________________________________________________________________

QUESTION 2

SELECT CONCAT (C.FIRST_NAME,' ',C.LAST_NAME) AS CUSTOMER_NAME, DATE_TRUNC('MONTH',P.PAYMENT_DATE)AS PAY_MON, SUM(P.AMOUNT)AS TOTAL_AMOUNT, COUNT (P.AMOUNT)AS PAYMENT_COUNT
FROM CUSTOMER C
JOIN PAYMENT P
ON C.CUSTOMER_ID=P.CUSTOMER_ID

WHERE C.CUSTOMER_ID IN (SELECT ID FROM(SELECT C.CUSTOMER_ID AS ID, SUM(P.AMOUNT)AS TOTAL_AMOUNT
FROM CUSTOMER C
JOIN PAYMENT P
ON C.CUSTOMER_ID=P.CUSTOMER_ID
GROUP BY 1
ORDER BY 2 DESC
LIMIT 10
  ) SUB2
) 
GROUP BY 1, 2
ORDER BY 1

______________________________________________________________________________________________

QUESTION 3 

SELECT CUSTOMER_NAME, PAY_MON, TOTAL_AMOUNT, 
LAG (TOTAL_AMOUNT) OVER (PARTITION BY CUSTOMER_NAME ORDER BY PAY_MON) AS LAG, 
TOTAL_AMOUNT-LAG (TOTAL_AMOUNT) OVER (PARTITION BY CUSTOMER_NAME ORDER BY PAY_MON) AS DIFFERENCE
FROM
(SELECT CONCAT (C.FIRST_NAME,' ',C.LAST_NAME) AS CUSTOMER_NAME, DATE_TRUNC('MONTH',P.PAYMENT_DATE)AS PAY_MON, SUM(P.AMOUNT)AS TOTAL_AMOUNT, COUNT (P.AMOUNT)AS PAYMENT_COUNT
FROM CUSTOMER C
JOIN PAYMENT P
ON C.CUSTOMER_ID=P.CUSTOMER_ID

WHERE C.CUSTOMER_ID IN (SELECT ID FROM(SELECT C.CUSTOMER_ID AS ID, SUM(P.AMOUNT)AS TOTAL_AMOUNT
FROM CUSTOMER C
JOIN PAYMENT P
ON C.CUSTOMER_ID=P.CUSTOMER_ID
GROUP BY 1
ORDER BY 2 DESC
LIMIT 10
  ) SUB2
) 
GROUP BY 1, 2
ORDER BY 1
)A


